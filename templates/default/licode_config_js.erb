var config = {}

config.rabbit = {};
config.nuve = {};
config.erizoController = {};
config.cloudProvider = {};
config.erizo = {};

config.rabbit.host = '<%= @rabbitmq_host %>';
config.rabbit.port = <%= @rabbitmq_port %>;

//config.nuve.dataBaseURL = "localhost/nuvedb";
config.nuve.dataBaseURL = '<%= @mongodb_url %>'
config.nuve.superserviceID = '525f2f195004c5c96f3e58fd';
config.nuve.superserviceKey = '23917';
config.nuve.testErizoController = '<%= @erizo_controller %>';

//Use undefined to run clients without Stun 
config.erizoController.stunServerUrl = 'stun:stun.l.google.com:19302';
//config.erizoController.stunServerUrl = 'stun:23.23.76.146:443';

//Use undefined to run clients without Turn
config.erizoController.turnServer = {};
config.erizoController.turnServer.url = '<%= @turnserver_url %>';
config.erizoController.turnServer.username = '<%= @turnserver_username %>';
config.erizoController.turnServer.password = '<%= @turnserver_password %>';
config.erizoController.ssl_key = '/etc/certs/well-fx.net.crt';
config.erizoController.ssl_crt = '/etc/certs/star_well-fx_net.key';
config.erizoController.ssl_ca = '/etc/certs/gd_bundle.crt';

config.erizoController.warning_n_rooms = 50;
config.erizoController.limit_n_rooms = 100;
config.erizoController.interval_time_keepAlive = 1000;

//STUN server IP address and port to be used by the server.
//if '' is used, the address is discovered locally
config.erizo.stunserver = '<%= @stunserver_host %>';
config.erizo.stunport = <%= @stunserver_port %>;

//note, this won't work with all versions of libnice. With 0 all the available ports are used
config.erizo.minport = 0;
config.erizo.maxport = 0;

config.cloudProvider.name = 'amazon';
//In Amazon Ec2 instances you can specify the zone host. By default is 'ec2.us-east-1a.amazonaws.com' 
config.cloudProvider.host = 'ec2.amazonaws.com';
config.cloudProvider.accessKey = '<%= @aws_access_key %>';
config.cloudProvider.secretAccessKey = '<%= @aws_secret_key %>';

// Roles to be used by services
config.roles = {"presenter":["publish", "subscribe", "record"], "viewer":["subscribe"], "test":["publish", "subscribe", "record"]};

var module = module || {};
module.exports = config;
